R version 4.4.0 (2024-04-24 ucrt) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64

R jest oprogramowaniem darmowym i dostarczany jest BEZ JAKIEJKOLWIEK GWARANCJI.
Możesz go rozpowszechniać pod pewnymi warunkami.
Wpisz 'license()' lub 'licence()' aby uzyskać szczegóły dystrybucji.

R jest projektem kolaboracyjnym z wieloma uczestnikami.
Wpisz 'contributors()' aby uzyskać więcej informacji oraz
'citation()' aby dowiedzieć się jak cytować R lub pakiety R w publikacjach.

Wpisz 'demo()' aby zobaczyć demo, 'help()' aby uzyskać pomoc on-line, lub
'help.start()' aby uzyskać pomoc w przeglądarce HTML.
Wpisz 'q()' aby wyjść z R.

> install.packages("neuralnet")
Instalowanie pakietu w ‘C:/Users/klism/AppData/Local/R/win-library/4.4’
(ponieważ ‘lib’ nie jest określony)
instalowanie dodatkowych zależności ‘Deriv’

próbowanie adresu URL 'https://cran.rstudio.com/bin/windows/contrib/4.4/Deriv_4.1.3.zip'
Content type 'application/zip' length 148952 bytes (145 KB)
downloaded 145 KB

próbowanie adresu URL 'https://cran.rstudio.com/bin/windows/contrib/4.4/neuralnet_1.44.2.zip'
Content type 'application/zip' length 124352 bytes (121 KB)
downloaded 121 KB

pakiet ‘Deriv’ został pomyślnie rozpakowany oraz sumy MD5 zostały sprawdzone
pakiet ‘neuralnet’ został pomyślnie rozpakowany oraz sumy MD5 zostały sprawdzone

Pobrane pakiety binarne są w
	C:\Users\klism\AppData\Local\Temp\Rtmpy2BGsY\downloaded_packages
> library(neuralnet)
> #x ∈ [1; 10]
> input <-  as.data.frame(runif(100, min=1, max=10))
> #f(x) = x^2 + e^−x
> output <- input^2 + exp(1)^(-input)
> #Połączenie danych wejsciowych i wyjsciowych
> trainingdata <- cbind(input,output)
> colnames(trainingdata) <- c("Wejscie","Wyjscie")
> #Trenowanie sieci neuronowej
> net.sqrt <- neuralnet(Wyjscie~Wejscie,trainingdata, hidden=7, threshold=0.01, stepmax=1e7)
> print(net.sqrt)
$call
neuralnet(formula = Wyjscie ~ Wejscie, data = trainingdata, hidden = 7, 
    threshold = 0.01, stepmax = 1e+07)

$response
      Wyjscie
1   27.321352
2   44.355943
3   17.350574
4   60.380645
5    2.551307
6   17.535964
7   29.537220
8   82.951900
9    1.878568
10  42.168812
11  63.391619
12  44.347607
13   2.303053
14  14.348214
15  16.691737
16  98.249292
17  57.653150
18  15.208823
19  28.457598
20   1.774645
21  71.168619
22   1.768164
23   1.671972
24  99.021220
25  41.105007
26  36.872582
27  49.782202
28  72.532483
29   6.780795
30  60.894534
31  22.541390
32  10.752128
33  37.403040
34   1.378961
35  54.634328
36  80.868174
37   8.602887
38   5.217008
39  27.671066
40  18.005400
41   3.681230
42   2.566041
43   2.469134
44  16.902866
45  45.619751
46  13.614733
47   2.187715
48   4.353529
49   3.093380
50  75.479505
51   8.506811
52  23.879401
53  37.691033
54  13.757659
55  93.846579
56  98.790744
57  20.129856
58   6.535669
59  14.041142
60   4.876279
61  26.928461
62   5.791713
63  13.929608
64   7.450427
65  34.266946
66  58.637281
67  37.797126
68  17.385652
69  48.905017
70  26.896040
71   4.036688
72   1.546621
73  23.319755
74  24.562793
75  61.645392
76  81.077830
77   7.448540
78  52.062488
79  97.373146
80  22.634552
81  26.528972
82  12.331624
83   3.333721
84  24.564420
85  41.953763
86  65.019191
87   4.239812
88  26.052397
89   3.563248
90  15.463158
91  21.865436
92  25.120410
93  25.310469
94  92.142091
95   3.038914
96   6.410036
97  45.476685
98  34.975262
99  24.183636
100 87.389513

$covariate
               
  [1,] 5.226469
  [2,] 6.659930
  [3,] 4.163535
  [4,] 7.770471
  [5,] 1.527843
  [6,] 4.185780
  [7,] 5.434414
  [8,] 9.107787
  [9,] 1.263265
 [10,] 6.493635
 [11,] 7.961864
 [12,] 6.659304
 [13,] 1.437169
 [14,] 3.784905
 [15,] 4.083490
 [16,] 9.912076
 [17,] 7.592934
 [18,] 3.897246
 [19,] 5.334114
 [20,] 1.215801
 [21,] 8.436137
 [22,] 1.212761
 [23,] 1.166399
 [24,] 9.950938
 [25,] 6.411191
 [26,] 6.072090
 [27,] 7.055589
 [28,] 8.516589
 [29,] 2.589545
 [30,] 7.803469
 [31,] 4.746863
 [32,] 3.273262
 [33,] 6.115622
 [34,] 1.006756
 [35,] 7.391462
 [36,] 8.992666
 [37,] 2.923895
 [38,] 2.261145
 [39,] 5.259836
 [40,] 4.241582
 [41,] 1.878402
 [42,] 1.533023
 [43,] 1.498560
 [44,] 4.109312
 [45,] 6.754153
 [46,] 3.686417
 [47,] 1.392581
 [48,] 2.055605
 [49,] 1.706419
 [50,] 8.687884
 [51,] 2.907264
 [52,] 4.885883
 [53,] 6.139127
 [54,] 3.705817
 [55,] 9.687441
 [56,] 9.939351
 [57,] 4.485374
 [58,] 2.541040
 [59,] 3.743993
 [60,] 2.182550
 [61,] 5.188726
 [62,] 2.387435
 [63,] 3.729020
 [64,] 2.717422
 [65,] 5.853552
 [66,] 7.657468
 [67,] 6.147763
 [68,] 4.167753
 [69,] 6.993147
 [70,] 5.185600
 [71,] 1.974292
 [72,] 1.102006
 [73,] 4.828225
 [74,] 4.955376
 [75,] 7.851433
 [76,] 9.004316
 [77,] 2.717070
 [78,] 7.215383
 [79,] 9.867781
 [80,] 4.756675
 [81,] 5.150065
 [82,] 3.507371
 [83,] 1.779021
 [84,] 4.955540
 [85,] 6.477054
 [86,] 8.063428
 [87,] 2.026835
 [88,] 5.103560
 [89,] 1.845339
 [90,] 3.929823
 [91,] 4.675052
 [92,] 5.011362
 [93,] 5.030301
 [94,] 9.599064
 [95,] 1.689466
 [96,] 2.515798
 [97,] 6.743553
 [98,] 5.913760
 [99,] 4.916942
[100,] 9.348231

$model.list
$model.list$response
[1] "Wyjscie"

$model.list$variables
[1] "Wejscie"


$err.fct
function (x, y) 
{
    1/2 * (y - x)^2
}
<bytecode: 0x000001ddc0869818>
<environment: 0x000001ddc086c0b0>
attr(,"type")
[1] "sse"

$act.fct
function (x) 
{
    1/(1 + exp(-x))
}
<bytecode: 0x000001ddc0864e58>
<environment: 0x000001ddc0864560>
attr(,"type")
[1] "logistic"

$linear.output
[1] TRUE

$data
     Wejscie   Wyjscie
1   5.226469 27.321352
2   6.659930 44.355943
3   4.163535 17.350574
4   7.770471 60.380645
5   1.527843  2.551307
6   4.185780 17.535964
7   5.434414 29.537220
8   9.107787 82.951900
9   1.263265  1.878568
10  6.493635 42.168812
11  7.961864 63.391619
12  6.659304 44.347607
13  1.437169  2.303053
14  3.784905 14.348214
15  4.083490 16.691737
16  9.912076 98.249292
17  7.592934 57.653150
18  3.897246 15.208823
19  5.334114 28.457598
20  1.215801  1.774645
21  8.436137 71.168619
22  1.212761  1.768164
23  1.166399  1.671972
24  9.950938 99.021220
25  6.411191 41.105007
26  6.072090 36.872582
27  7.055589 49.782202
28  8.516589 72.532483
29  2.589545  6.780795
30  7.803469 60.894534
31  4.746863 22.541390
32  3.273262 10.752128
33  6.115622 37.403040
34  1.006756  1.378961
35  7.391462 54.634328
36  8.992666 80.868174
37  2.923895  8.602887
38  2.261145  5.217008
39  5.259836 27.671066
40  4.241582 18.005400
41  1.878402  3.681230
42  1.533023  2.566041
43  1.498560  2.469134
44  4.109312 16.902866
45  6.754153 45.619751
46  3.686417 13.614733
47  1.392581  2.187715
48  2.055605  4.353529
49  1.706419  3.093380
50  8.687884 75.479505
51  2.907264  8.506811
52  4.885883 23.879401
53  6.139127 37.691033
54  3.705817 13.757659
55  9.687441 93.846579
56  9.939351 98.790744
57  4.485374 20.129856
58  2.541040  6.535669
59  3.743993 14.041142
60  2.182550  4.876279
61  5.188726 26.928461
62  2.387435  5.791713
63  3.729020 13.929608
64  2.717422  7.450427
65  5.853552 34.266946
66  7.657468 58.637281
67  6.147763 37.797126
68  4.167753 17.385652
69  6.993147 48.905017
70  5.185600 26.896040
71  1.974292  4.036688
72  1.102006  1.546621
73  4.828225 23.319755
74  4.955376 24.562793
75  7.851433 61.645392
76  9.004316 81.077830
77  2.717070  7.448540
78  7.215383 52.062488
79  9.867781 97.373146
80  4.756675 22.634552
81  5.150065 26.528972
82  3.507371 12.331624
83  1.779021  3.333721
84  4.955540 24.564420
85  6.477054 41.953763
86  8.063428 65.019191
87  2.026835  4.239812
88  5.103560 26.052397
89  1.845339  3.563248
90  3.929823 15.463158
91  4.675052 21.865436
92  5.011362 25.120410
93  5.030301 25.310469
94  9.599064 92.142091
95  1.689466  3.038914
96  2.515798  6.410036
97  6.743553 45.476685
98  5.913760 34.975262
99  4.916942 24.183636
100 9.348231 87.389513

$exclude
NULL

$net.result
$net.result[[1]]
            [,1]
  [1,] 27.314819
  [2,] 44.350908
  [3,] 17.360078
  [4,] 60.386749
  [5,]  2.575433
  [6,] 17.544804
  [7,] 29.539323
  [8,] 82.928066
  [9,]  1.881754
 [10,] 42.174910
 [11,] 63.411383
 [12,] 44.342615
 [13,]  2.323870
 [14,] 14.362055
 [15,] 16.703329
 [16,] 98.241256
 [17,] 57.644870
 [18,] 15.222959
 [19,] 28.455188
 [20,]  1.769886
 [21,] 71.185939
 [22,]  1.762845
 [23,]  1.657289
 [24,] 98.987240
 [25,] 41.116036
 [26,] 36.894695
 [27,] 49.756634
 [28,] 72.543411
 [29,]  6.758850
 [30,] 60.903275
 [31,] 22.531572
 [32,] 10.749187
 [33,] 37.424728
 [34,]  1.319090
 [35,] 54.613058
 [36,] 80.842501
 [37,]  8.584937
 [38,]  5.206258
 [39,] 27.665709
 [40,] 18.012438
 [41,]  3.694937
 [42,]  2.590257
 [43,]  2.492563
 [44,] 16.913841
 [45,] 45.608415
 [46,] 13.627137
 [47,]  2.205555
 [48,]  4.355600
 [49,]  3.115623
 [50,] 75.474113
 [51,]  8.488342
 [52,] 23.867780
 [53,] 37.712362
 [54,] 13.770432
 [55,] 93.895042
 [56,] 98.765144
 [57,] 20.127908
 [58,]  6.514432
 [59,] 14.054518
 [60,]  4.870105
 [61,] 26.920723
 [62,]  5.774958
 [63,] 13.942766
 [64,]  7.428262
 [65,] 34.286726
 [66,] 58.634130
 [67,] 37.818300
 [68,] 17.395034
 [69,] 48.881259
 [70,] 26.888208
 [71,]  4.044228
 [72,]  1.516251
 [73,] 23.308626
 [74,] 24.551096
 [75,] 61.657813
 [76,] 81.052033
 [77,]  7.426373
 [78,] 52.035919
 [79,] 97.387673
 [80,] 22.624540
 [81,] 26.520148
 [82,] 12.338859
 [83,]  3.352923
 [84,] 24.552724
 [85,] 41.960900
 [86,] 65.043640
 [87,]  4.243823
 [88,] 26.042483
 [89,]  3.578917
 [90,] 15.477112
 [91,] 21.857307
 [92,] 25.109076
 [93,] 25.299343
 [94,] 92.185118
 [95,]  3.061712
 [96,]  6.389303
 [97,] 45.466038
 [98,] 34.996381
 [99,] 24.171910
[100,] 87.392092


$weights
$weights[[1]]
$weights[[1]][[1]]
          [,1]      [,2]      [,3]       [,4]     [,5]      [,6]       [,7]
[1,] 10.855943 15.854178 -8.157670 -2.9579999 17.77385 13.711511 -5.5944576
[2,] -1.083576 -1.569597  1.007646  0.8777568 18.94457 -1.362451  0.9690374

$weights[[1]][[2]]
           [,1]
[1,]  18.650440
[2,]  -7.683405
[3,] -17.057512
[4,]  42.390920
[5,]  19.781182
[6,]  19.827693
[7,] -14.914494
[8,]  26.048535



$generalized.weights
$generalized.weights[[1]]
               [,1]
  [1,] -0.014582007
  [2,] -0.006891669
  [3,] -0.029162083
  [4,] -0.004356004
  [5,] -0.704108186
  [6,] -0.028682168
  [7,] -0.012943248
  [8,] -0.002687952
  [9,] -1.443785167
 [10,] -0.007441491
 [11,] -0.004037944
 [12,] -0.006893620
 [13,] -0.875302420
 [14,] -0.039374096
 [15,] -0.030985155
 [16,] -0.002013348
 [17,] -0.004674188
 [18,] -0.035888564
 [19,] -0.013703463
 [20,] -1.701523400
 [21,] -0.003362730
 [22,] -1.720461651
 [23,] -2.056482877
 [24,] -0.001974761
 [25,] -0.007739017
 [26,] -0.009163671
 [27,] -0.005806892
 [28,] -0.003265125
 [29,] -0.130848188
 [30,] -0.004299353
 [31,] -0.019509431
 [32,] -0.062561407
 [33,] -0.008961148
 [34,] -4.751980886
 [35,] -0.005065116
 [36,] -0.002784307
 [37,] -0.089472331
 [38,] -0.199254218
 [39,] -0.014302354
 [40,] -0.027526102
 [41,] -0.355809045
 [42,] -0.695871102
 [43,] -0.753499316
 [44,] -0.030380031
 [45,] -0.006607216
 [46,] -0.042818116
 [47,] -0.983278122
 [48,] -0.267929716
 [49,] -0.484974132
 [50,] -0.003073928
 [51,] -0.091094496
 [52,] -0.017880054
 [53,] -0.008854339
 [54,] -0.042108522
 [55,] -0.002221581
 [56,] -0.001986344
 [57,] -0.023175373
 [58,] -0.138771620
 [59,] -0.040757655
 [60,] -0.222353633
 [61,] -0.014906677
 [62,] -0.168382750
 [63,] -0.041280413
 [64,] -0.112587926
 [65,] -0.010278155
 [66,] -0.004555860
 [67,] -0.008815536
 [68,] -0.029070216
 [69,] -0.005960535
 [70,] -0.014933982
 [71,] -0.304027129
 [72,] -2.735081738
 [73,] -0.018532620
 [74,] -0.017133690
 [75,] -0.004218360
 [76,] -0.002774301
 [77,] -0.112633448
 [78,] -0.005437777
 [79,] -0.002056411
 [80,] -0.019387969
 [81,] -0.015248783
 [82,] -0.050186980
 [83,] -0.423464893
 [84,] -0.017131974
 [85,] -0.007499937
 [86,] -0.003879513
 [87,] -0.279995001
 [88,] -0.015673663
 [89,] -0.376514218
 [90,] -0.034957059
 [91,] -0.020431007
 [92,] -0.016562049
 [93,] -0.016374329
 [94,] -0.002297003
 [95,] -0.501163251
 [96,] -0.143142341
 [97,] -0.006638312
 [98,] -0.009954173
 [99,] -0.017541245
[100,] -0.002497899


$startweights
$startweights[[1]]
$startweights[[1]][[1]]
           [,1]       [,2]       [,3]      [,4]       [,5]       [,6]     [,7]
[1,] -1.8391221  1.3593230  0.9457248 2.3253981  1.8784436  0.2622837 2.445456
[2,] -0.8971076 -0.3439093 -0.3577898 0.4039187 -0.9366404 -0.6283908 1.822690

$startweights[[1]][[2]]
           [,1]
[1,] -0.8324351
[2,] -1.3262650
[3,] -1.2287179
[4,] -0.1661598
[5,] -0.1168911
[6,]  0.3448180
[7,] -1.2502987
[8,]  1.1936339



$result.matrix
                               [,1]
error                  1.579020e-02
reached.threshold      9.989724e-03
steps                  3.194400e+04
Intercept.to.1layhid1  1.085594e+01
Wejscie.to.1layhid1   -1.083576e+00
Intercept.to.1layhid2  1.585418e+01
Wejscie.to.1layhid2   -1.569597e+00
Intercept.to.1layhid3 -8.157670e+00
Wejscie.to.1layhid3    1.007646e+00
Intercept.to.1layhid4 -2.958000e+00
Wejscie.to.1layhid4    8.777568e-01
Intercept.to.1layhid5  1.777385e+01
Wejscie.to.1layhid5    1.894457e+01
Intercept.to.1layhid6  1.371151e+01
Wejscie.to.1layhid6   -1.362451e+00
Intercept.to.1layhid7 -5.594458e+00
Wejscie.to.1layhid7    9.690374e-01
Intercept.to.Wyjscie   1.865044e+01
1layhid1.to.Wyjscie   -7.683405e+00
1layhid2.to.Wyjscie   -1.705751e+01
1layhid3.to.Wyjscie    4.239092e+01
1layhid4.to.Wyjscie    1.978118e+01
1layhid5.to.Wyjscie    1.982769e+01
1layhid6.to.Wyjscie   -1.491449e+01
1layhid7.to.Wyjscie    2.604854e+01

attr(,"class")
[1] "nn"
> plot(net.sqrt, rep = "best")
> #Prognozowanie z pomoca˛ sieci neuronowej
> testdata <- as.data.frame(runif(300, min=1, max=10))